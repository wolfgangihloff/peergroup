== Welcome to Peer Group Supervision

Peer Group Supervision enables professionals to help each other.

== Updates

This is the first version, heavy alpha.

== Running the application

0. Fetch all submodules unsed by node server

  git submodule update --init

1. Install required gems

  bundle install

If you are using rvm, create new gemset to not mess with your default gems

2. Setup Redis

Copy and adjust redis config file:

  cp config/redis.yml.example config/redis.yml

Run redis (download from http://redis.io/download) - tested on 2.0 and 2.2 stable releases

3. Run node server (download from http://nodejs.org/#download) - tested on (v0.4.3, v0.4.7)

  node app-node/server.js

Tip: You can also use nvm https://github.com/creationix/nvm

You can run node as root user (sudo node ...) or with `authbind` (authbind node ...), so socket.io could bind to low port to serve xml policy file for Flash.

4. Run the application

  bundle exec rails server

5. Open http://localhost:3000

== Running tests

=== BIG WARNING:

As with test database, make sure that you run your tests on separate Redis database, as this will flush you data before tests.

Unfortunately Redis gem uses default url for connection (redis://localhost:6379), so if you don't provide proper config (or use older gem than from master repository for Redis in case of unix socket), then instead of connecting to test database, your test environment could connect to other database and flush it all.

You have been warned!

1. Install required gems

  bundle install

2. Setup database number in config/redis.yml or run separate redis server like this:

  redis-server config/redis-test.conf

3. Run Node server instance
REDIS_DB should be number that you specified in config/redis.yml

  REDIS_DB=1 node app-node/server.js

Eventually you can connect to separate instace of redis server (if running)

  REDIS_DB=1 REDIS_PORT=6380 node app-node/server.js

4. Run tests:

  bundle exec rake spec

== Translations

  Currently, the application is available in 2 languages: English and German. Default locale is set during the application boot, but is's possible to switch to different locale while application is running - just click link with locale name in the header.

  To add missing translation for non-default locale:

1. import all keys from primary locale file: rake tolk:sync

2. importing non-primary locales: rake tolk:import

3. start application in development mode, open up http://localhost:3000/tolk

4. find your missing translation by english phrase or key without first part, so if you see: "translation missing for key en, supervisions, show, title", then you need to search for "supervisions.show.title" key

5. edit, and save, and when ready dump your translations: rake tolk:dump

  To change the default locale edit aprropriate line in the environment file config/environments/production.rb or config/environments/development.rb. The line looks like:

  # I18n.default_locale = :en

  Other localized files are:
   * db/default_rules_<locale>.csv
   * app/views/pages/_about.<locale>.html.haml
   * app/views/pages/_help.<locale>.html.haml
   * README / LIESMICH
